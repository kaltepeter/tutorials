# Installing Python on Windows

This page walks through how to install a version of Python on Windows that is compatible with this tutorial.

Any version of Python 3 will work for this tutorial. If you don't have Python installed, we'll install Python version 3.4.1.

If you already have Python installed, check the Python version: if the version number starts with a 3 (as opposed to a 2), you can use it for this class and can skip to [setting your Path](#put-python-on-the-path).

## 1. Download and install Python

<ol>
<li>Click https://www.python.org/ftp/python/3.4.1/python-3.4.1.msi and choose "run" if you have the option to. Otherwise, save it to your Desktop, then minimize windows to see your desktop, and double click on it to start the installer. Follow the installer instructions to completion.</li>
<li><b>Open a terminal (we will be doing this multiple times, so make a note of how to do this!)</b>:
<ul>
<li>On Windows 10: click on the Start menu (the Windows logo in the lower left of the screen), and type <code>cmd</code>. Click on the "Command Prompt" search result.
<li>On Windows Vista or Windows 7: click on the Start menu (the Windows logo in the lower left of the screen), type <code>cmd</code> into the Search field directly above the Start menu button, and click on "cmd" in the search results above the Search field.</li>
<li>On Windows XP: click on the Start menu (the Windows logo in the lower left of the screen), click on "Run...", type <code>cmd</code> into the text box, and hit enter.</li>
<br />
You have started a <b>terminal prompt</b>. This terminal prompt is another way of navigating your computer and running programs -- just textually instead of graphically. We are going to be running Python and Python scripts from this terminal prompt.
</ul>
<li>At this <code>C:\</code> prompt that appears, test your Python installation by typing:

<pre>
\Python34\python.exe
</pre>

and pressing Enter. You should see something like
<pre>
Python 3.4.1 (v3.4.1:d047928ae3f6, May 13 2013, 12:45:22) on win32
Type "help", "copyright", "credits" or "license" for more information.
>>>
</pre>

You just started Python! The <code>>>></code> indicates that you are at a new type of prompt -- a Python prompt. The terminal prompt lets you navigate your computer and run programs, and the Python prompt lets you write and run Python code interactively.

</li>
<li>To exit the Python prompt, type

<pre>
exit()
</pre>

and press Enter. This will take you back to the Windows command prompt (the <code>C:\\</code> you saw earlier).</li>
</ol>

## 2. Put Python on the PATH

You might have noticed that you typed a "full path" to the Python application above when launching Python (<code>python.exe</code> is the application, but we typed <code>\Python34\python.exe</code>). In this step, you will configure your computer so that you can run Python without typing the ''Python34'' directory name.

### On Windows 10

#### Get to System Properties

1. Right-click on the Start menu. Click the "System" entry. This will pop up a
window that says "View basic information about your computer".

2. Click the "Advanced system settings" link in the left panel. This will pop up
a System Properties window.

3. Click the "Environment Variables..." button. This will pop up an Environment
Variables window.

4. Select the "PATH" variable and press the "Edit..." button.

5. Add the following entries for the PATH environment variable:

* <code>C:\Python34</code>
* <code>C:\Python34\Scripts</code>

### On Windows versions earlier than Windows 10

#### Get to System Properties

1. Open up "My Computer"  by clicking on the Start menu or the Windows logo in the lower-left hand corner, and navigate to "My Computer" (for Windows XP) or "Computer" (For Vista and Windows 7).
2. ''Right-click'' on the empty space in the window, and choose ''Properties''.

##### If you're using XP

A window labeled "System Properties" will pop up.

1. Click the "Advanced" tab.

##### If you're not using XP

A window labeled "View basic information about your computer" will appear.

1. In this window, click "Advanced system settings"

A window with the title "System Properties" will appear.

#### Edit the Path

<ol>
<li>Within System Properties, make sure you are in the tab labeled "Advanced".</li>
<li>Click the button labeled "Environment Variables". A window labeled "Environment Variables" will appear.
<li>In this window, the screen is split between "User variables" and "System variables". Within "System variables", scroll down and find the one labeled '''Path'''. Click the "Edit..." button.

A window with the "Variable name" and the "Variable value" should appear. The "Variable value" will already have some text in it; click in the box to unhighlight it (we don't want to accidentally delete that text).</li>
<li>In the "Variable value" box, scroll to the end. Add the following text, and hit OK. Make sure to include the semicolon at the start! <pre>;c:\python34\;c:\python34\scripts</pre></li>
<li>Press "OK" to close out the system properties window.</li>
</ol>

## 3. Test your Path change

To test your change:

<ol>
<li>Open up a <b>new</b> command prompt: do this the same way you did above when installing Python. This needs to be a new command prompt because the changes you just made didn't take effect in prompts that were already open.</li>
<li>Type <code>python</code> into the command prompt and press return to start Python</li>
<li>Notice that you now get a Python interpreter, indicated by the change to a <code>>>></code> prompt.</li>
<li>Exit the Python prompt by typing <pre>exit()</pre> and hitting enter. Now you're back at the Windows command prompt (<code>C:\</code>).</li></ol></li>
</ol>

## Success!

You have Python installed, configured, and tested.

---

Questions? Please don't hesitate to reach out to the author (me, Jessica!) at:
<code>jesstess@mit.edu</code>.
